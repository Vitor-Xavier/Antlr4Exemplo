//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Exemplo.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IExemploListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class ExemploBaseListener : IExemploListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExemploParser.rule_set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRule_set([NotNull] ExemploParser.Rule_setContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExemploParser.rule_set"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRule_set([NotNull] ExemploParser.Rule_setContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExemploParser.rule_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRule_block([NotNull] ExemploParser.Rule_blockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExemploParser.rule_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRule_block([NotNull] ExemploParser.Rule_blockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExemploParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] ExemploParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExemploParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] ExemploParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>minusExpression</c>
	/// labeled alternative in <see cref="ExemploParser.arithmetic_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMinusExpression([NotNull] ExemploParser.MinusExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>minusExpression</c>
	/// labeled alternative in <see cref="ExemploParser.arithmetic_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMinusExpression([NotNull] ExemploParser.MinusExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>timesExpression</c>
	/// labeled alternative in <see cref="ExemploParser.arithmetic_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimesExpression([NotNull] ExemploParser.TimesExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>timesExpression</c>
	/// labeled alternative in <see cref="ExemploParser.arithmetic_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimesExpression([NotNull] ExemploParser.TimesExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>atomExpression</c>
	/// labeled alternative in <see cref="ExemploParser.arithmetic_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtomExpression([NotNull] ExemploParser.AtomExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>atomExpression</c>
	/// labeled alternative in <see cref="ExemploParser.arithmetic_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtomExpression([NotNull] ExemploParser.AtomExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisExpression</c>
	/// labeled alternative in <see cref="ExemploParser.arithmetic_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesisExpression([NotNull] ExemploParser.ParenthesisExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisExpression</c>
	/// labeled alternative in <see cref="ExemploParser.arithmetic_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesisExpression([NotNull] ExemploParser.ParenthesisExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>divExpression</c>
	/// labeled alternative in <see cref="ExemploParser.arithmetic_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivExpression([NotNull] ExemploParser.DivExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>divExpression</c>
	/// labeled alternative in <see cref="ExemploParser.arithmetic_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivExpression([NotNull] ExemploParser.DivExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>plusExpression</c>
	/// labeled alternative in <see cref="ExemploParser.arithmetic_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPlusExpression([NotNull] ExemploParser.PlusExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>plusExpression</c>
	/// labeled alternative in <see cref="ExemploParser.arithmetic_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPlusExpression([NotNull] ExemploParser.PlusExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonExpression</c>
	/// labeled alternative in <see cref="ExemploParser.comparison_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonExpression([NotNull] ExemploParser.ComparisonExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonExpression</c>
	/// labeled alternative in <see cref="ExemploParser.comparison_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonExpression([NotNull] ExemploParser.ComparisonExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisComparisonExpression</c>
	/// labeled alternative in <see cref="ExemploParser.comparison_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesisComparisonExpression([NotNull] ExemploParser.ParenthesisComparisonExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisComparisonExpression</c>
	/// labeled alternative in <see cref="ExemploParser.comparison_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesisComparisonExpression([NotNull] ExemploParser.ParenthesisComparisonExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>variableAssignment</c>
	/// labeled alternative in <see cref="ExemploParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableAssignment([NotNull] ExemploParser.VariableAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>variableAssignment</c>
	/// labeled alternative in <see cref="ExemploParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableAssignment([NotNull] ExemploParser.VariableAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numberAtom</c>
	/// labeled alternative in <see cref="ExemploParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberAtom([NotNull] ExemploParser.NumberAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numberAtom</c>
	/// labeled alternative in <see cref="ExemploParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberAtom([NotNull] ExemploParser.NumberAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>variableAtom</c>
	/// labeled alternative in <see cref="ExemploParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableAtom([NotNull] ExemploParser.VariableAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>variableAtom</c>
	/// labeled alternative in <see cref="ExemploParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableAtom([NotNull] ExemploParser.VariableAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExemploParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] ExemploParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExemploParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] ExemploParser.VariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExemploParser.comparison_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparison_operator([NotNull] ExemploParser.Comparison_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExemploParser.comparison_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparison_operator([NotNull] ExemploParser.Comparison_operatorContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
